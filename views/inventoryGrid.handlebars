<!-- Products Grid -->
<div class="container mx-auto my-4 p-6 bg-white shadow-lg rounded-lg">
  <!-- Flex Container for Form and Product List -->
  <div class="flex flex-col md:flex-row gap-6">
    <!-- Search Form -->
    <form action="/searchbar" method="GET" class="w-full md:w-1/3 bg-white p-4 shadow rounded-lg">
      <!-- Search Input -->
      <div class="mb-6">
        <label for="search" class="block text-gray-800 font-medium mb-2">Search</label>
        <input type="text" id="search" name="query"
          class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-400 focus:outline-none"
          placeholder="Search Inventory" value="{{query}}" />
      </div>

      <!-- Filter Options -->
      <div class="space-y-6">
        {{#each categories}}
        {{#if this.sub_categories.length}}
        <div>
          <h3 class="text-lg font-semibold text-gray-800 mb-3">{{this.categoryName}}</h3>
          <div class="grid grid-cols-2 gap-3">
            {{#each this.sub_categories}}
            <label class="flex items-center space-x-2">
              <input type="checkbox" class="form-checkbox text-blue-500 rounded focus:ring focus:ring-blue-400"
                name="subCategories[]" value="{{this.id}}" {{#if (isSelected this.id
                ../subCategories)}}checked{{/if}} />
              <span class="text-gray-700">{{this.subCategoryName}}</span>
            </label>
            {{/each}}
          </div>
        </div>
        {{/if}}
        {{/each}}
      </div>

      <!-- Search Button -->
      <button type="submit"
        class="mt-6 w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 focus:ring focus:ring-blue-400 focus:outline-none">
        Apply Filters
      </button>
    </form>

    <!-- Product List -->
    <div class="w-full md:w-2/3 space-y-6">
      {{#each products}}
      <div class="w-full bg-white shadow-lg rounded-lg overflow-hidden">
        <div class="flex items-start p-4">
          <!-- Product Image -->
          <img class="w-32 h-32 object-cover rounded" src="{{this.image}}" alt="{{this.description}}" />

          <!-- Product Info -->
          <div class="flex flex-col ml-4">
            <h5 class="text-lg font-semibold text-gray-800">{{this.productName}}</h5>
            <p class="text-gray-600">${{this.price}}</p>
            <h5 class="text-gray-700 font-medium mt-2">Category:</h5>
            <p class="text-gray-600">{{this.category.categoryName}}</p>
            <h5 class="text-gray-700 font-medium mt-2">Tags:</h5>
            {{#each this.sub_categories}}
            <p class="text-gray-600">{{this.subCategoryName}}</p>
            {{/each}}
          </div>

          <!-- Buttons -->
          <div class="flex flex-col items-end ml-auto">
            <a class="bg-blue-600 text-white px-4 py-2 rounded mb-2 hover:bg-blue-700 transition duration-300 text-sm"
              href="/admin/editProduct/{{this.id}}">
              Edit Unit
            </a>
            <a class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition duration-300 text-sm" href="#"
              id="{{this.id}}" onclick="DeleteUnit({{this.id}})">
              Delete Unit
            </a>
          </div>
        </div>
      </div>
      {{/each}}
    </div>
  </div>
</div>

<script>
  const DeleteUnit = async (id) => {
    try {
      const response = await fetch(`/admin/editProduct/${id}/deleteProduct`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) {
        throw new Error(`Failed to delete product (Status: ${response.status})`);
      }

      const result = await response.json();
      console.log("✅ Product deleted:", result);

      // ✅ Refresh the UI or update it dynamically
      alert("Product deleted successfully!");
      location.reload(); // Refresh page or remove item dynamically

    } catch (error) {
      console.error("❌ Error deleting product:", error);
      alert("Failed to delete product. Please try again.");
    }
  };


</script>